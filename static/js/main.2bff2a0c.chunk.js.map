{"version":3,"sources":["components/navbar.js","redux/actions.js","components/productTable.js","components/graph.js","components/contact.js","App.js","redux/sagas.js","redux/reducers.js","redux/store.js","index.js"],"names":["Navigation","props","handleSearchInput","e","key","preventDefault","submitSearchInput","searchInput","searchInputRef","current","value","console","log","setSearchInput","forceUpdate","React","createRef","this","recentSearches","searchOptions","NewContainer","id","NewNavbar","bg","expand","Navbar","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Item","ThemeProvider","theme","StyledAutocomplete","options","getOptionLabel","searchOption","name","renderInput","params","TextField","label","color","onKeyDown","inputRef","NewButton","variant","onClick","Component","styled","Container","Button","withStyles","root","height","width","Autocomplete","createMuiTheme","palette","primary","main","mapDispatchToProps","type","connect","state","ProductTable","Table","striped","bordered","hover","Graph","colorType","colorDomain","colorRange","data","graphData","Contact","submitEmail","ev","handleEmail","email","refs","setEmail","success","emailSuccess","Form","inline","NewFormControl","placeholder","ref","FormControl","App","Wrapper","div","appWatcher","rootSaga","getRecentSearches","action","select","newRecentSearches","currIndex","length","i","slice","put","takeLatest","all","initialState","x","y","tableData","selectedProduct","favourites","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+XAkBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,kBAAoB,SAACC,GACL,UAAVA,EAAEC,MACJD,EAAEE,iBACF,EAAKC,sBARU,EAYnBA,kBAAoB,WAClB,IAAMC,EAAc,EAAKC,eAAeC,QAAQC,MAChDC,QAAQC,IAAIL,GACZ,EAAKN,MAAMY,eAAeN,GAC1B,EAAKO,eAdL,EAAKN,eAAiBO,IAAMC,YAFX,E,0CAmBnB,WAAU,IAAD,OACP,EAGIC,KAAKhB,MAFPiB,EADF,EACEA,eACAC,EAFF,EAEEA,cAGF,OACE,cAACC,EAAD,CAAcC,GAAG,SAAjB,SACE,eAACC,EAAD,CAAWC,GAAG,QAAQC,OAAO,KAA7B,UACE,cAACC,EAAA,EAAOC,MAAR,CAAcC,KAAK,QAAnB,4BACA,cAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,eAACJ,EAAA,EAAOK,SAAR,CAAiBT,GAAG,mBAApB,UACE,eAACU,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUN,KAAK,QAAf,uBACA,eAACO,EAAA,EAAD,CAAaC,MAAM,kBAAkBd,GAAG,qBAAxC,UACE,cAACa,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,SAAsCT,EAAe,KACrD,cAACgB,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,SAAsCT,EAAe,KACrD,cAACgB,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,SAAsCT,EAAe,WAGzD,cAACmB,EAAA,EAAD,CAAeC,MAAOA,EAAtB,SACE,cAACC,EAAD,CACElB,GAAG,iBACHmB,QAASrB,EACTsB,eAAgB,SAACC,GAAD,OAAkBA,EAAaC,MAC/CC,YAAa,SAACC,GAAD,OACb,cAACC,EAAA,EAAD,2BACMD,GADN,IACcE,MAAM,SAClBC,MAAM,UACNC,UAAW,EAAK/C,kBAChBgD,SAAU,EAAK1C,uBAGrB,cAAC2C,EAAD,CAAWC,QAAQ,kBAAkBC,QAASpC,KAAKX,kBAAnD,gC,GArDagD,aA6DnBlC,EAAemC,YAAOC,IAAPD,CAAH,uHAQZjC,EAAYiC,YAAO9B,IAAP8B,CAAH,2FAKTJ,EAAYI,YAAOE,IAAPF,CAAH,uSAaThB,EAAqBmB,YAAW,CACpCC,KAAM,CACJC,OAAQ,GACRC,MAAO,MAHgBH,CAKxBI,KAEGxB,EAAQyB,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKNC,EAAsB,CAC1BtD,eCzH4B,SAACN,GAC7B,MAAO,CACL6D,KAAM,mBACN7D,iBD8HW8D,eALS,SAACC,GAAD,MAAY,CAClCpD,eAAgBoD,EAAMpD,eACtBC,cAAemD,EAAMnD,iBAGiBgD,EAAzBE,CAA6CrE,G,iBExHtDuE,E,kDACJ,WAAYtE,GAAQ,uCACZA,G,0CAGR,WACE,OACE,cAAC,EAAD,CAAcoB,GAAG,QAAjB,SACE,eAACmD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,0CACA,8CACA,uCACA,uCACA,4CAGJ,kCACE,+BACE,6BAAI,cAAC,IAAD,MACJ,6BAAM1D,KAAKhB,MAAMM,cACjB,sCACA,sCACA,yCAEF,+BACE,6BAAI,cAAC,IAAD,MACJ,6BAAMU,KAAKhB,MAAMM,cACjB,sCACA,sCACA,yCAEF,+BACE,6BAAI,cAAC,IAAD,MACJ,6BAAMU,KAAKhB,MAAMM,cACjB,sCACA,sCACA,qD,GAtCa+C,aA+CrBlC,EAAemC,YAAOC,IAAPD,CAAH,qHAYHc,eAJS,SAACC,GAAD,MAAY,CAClC/D,YAAa+D,EAAM/D,eAGN8D,CAAyBE,G,QC3DlCK,E,kDACJ,WAAY3E,GAAQ,uCACVA,G,0CAGV,WACE,OACE,cAAC,EAAD,CAAcoB,GAAG,QAAjB,SACE,cAAC,IAAD,CAAQuC,OAAQ,IAAKC,MAAO,IAAKgB,UAAU,WAAWC,YAAa,CAAC,GAAIC,WAAY,CAAC,WAArF,SACE,cAAC,IAAD,CAAmBC,KAAM/D,KAAKhB,MAAMgF,oB,GAT1B3B,aAgBdlC,EAAemC,YAAOC,IAAPD,CAAH,qHAYHc,eAJS,SAACC,GAAD,MAAY,CAClCW,UAAWX,EAAMW,aAGJZ,CAAyBO,G,mBCzBlCM,G,kDACJ,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IAGRkF,YAAc,SAACC,GACE,UAAXA,EAAGhF,MACLgF,EAAG/E,iBACH,EAAKgF,gBAPU,EAWnBA,YAAc,WACZ,IAAMC,EAAQ,EAAKC,KAAKD,MAAM5E,MAC9B,EAAKT,MAAMuF,SAASF,IAbH,E,0CAgBnB,WACE,IAAIG,EAKJ,OAJIxE,KAAKhB,MAAMyF,eACbD,EAAU,cAAC,IAAD,KAIV,eAAC,GAAD,CAAcpE,GAAG,UAAjB,UACE,eAACsE,EAAA,EAAD,CAAM1C,UAAWhC,KAAKkE,YAAaS,QAAM,EAAzC,UACE,cAACC,GAAD,CAAgBzB,KAAK,QAAQ0B,YAAY,cAAcC,IAAI,UAC1DN,KAEH,cAAC,GAAD,CAAWrC,QAAQ,kBAAkBC,QAASpC,KAAKoE,YAAnD,2B,GA7Bc/B,aAqChBlC,GAAemC,YAAOC,IAAPD,CAAH,qHAQZsC,GAAiBtC,YAAOyC,KAAPzC,CAAH,mGAMdJ,GAAYI,YAAOE,IAAPF,CAAH,8PAWTY,GAAqB,CACzBqB,SHpEsB,SAACF,GACvB,MAAO,CACLlB,KAAM,YACNkB,WGwEWjB,gBAJS,SAACC,GAAD,MAAY,CAClCoB,aAAcpB,EAAMoB,gBAGkBvB,GAAzBE,CAA6Ca,IC1EvCe,G,4JACnB,WACE,OACE,eAACC,GAAD,WACE,cAAC,EAAD,IACA,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,GAAD,UACE,cAAC,GAAD,a,GAVuB5C,aAiB3B4C,GAAU3C,IAAO4C,IAAV,gKASP/E,GAAemC,YAAOC,IAAPD,CAAH,4H,6DC5BR1C,I,aAkBA2E,I,aAOAY,I,aAKeC,IAhCZC,GAAoB,SAAAhC,GAAK,OAAIA,EAAMpD,gBAEhD,SAAUL,GAAe0F,GAAzB,4EAC0B,OAD1B,SACgCC,aAAOF,IADvC,OAIE,IAHIG,EADN,OAEMC,EAAYD,EAAkBE,OAEzBC,EAAIF,EAAWE,EAAI,EAAGA,IAC7BH,EAAkBG,GAAKH,EAAkBG,EAAI,GAK/C,OAHAH,EAAkB,GAAKF,EAAOhG,YAC9BkG,EAAoBA,EAAkBI,MAAM,EAAG,GARjD,SAUQC,aAAI,CACR1C,KAAM,uBACN7D,YAAagG,EAAOhG,YACpBW,eAAgBuF,IAbpB,wCAkBA,SAAUjB,GAASe,GAAnB,kEACE,OADF,SACQO,aAAI,CACR1C,KAAM,kBAFV,wCAOA,SAAUgC,KAAV,kEACE,OADF,SACQW,aAAW,mBAAoBlG,IADvC,OAEE,OAFF,SAEQkG,aAAW,YAAavB,IAFhC,wCAKe,SAAUa,KAAV,kEACb,OADa,SACPW,aAAI,CACRZ,OAFW,wCCpCf,IAGMa,GAAe,CACnBhC,UAJqB,CAAC,CAACiC,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,IAK1EC,UAJqB,GAKrB7G,YAAa,eACb8G,gBAAiB,GACjBlG,cAAe,CACb,CAACwB,KAAM,uBACP,CAACA,KAAM,uBACP,CAACA,KAAM,wBACP,CAACA,KAAM,8BACP,CAACA,KAAM,oBACP,CAACA,KAAM,qBAET2E,WAAY,GACZpG,eAAgB,GAChBwE,cAAc,GCbV6B,GAAiBC,eAEjBC,GAAQC,cDcC,WAAmC,IAAlCpD,EAAiC,uDAAzB2C,GAAcV,EAAW,uCAC/C,OAAOA,EAAOnC,MACZ,IAAK,uBACH,OAAO,2BACFE,GADL,IAEE/D,YAAagG,EAAOhG,cAExB,IAAK,gBACH,OAAO,2BACF+D,GADL,IAEEoB,cAAc,IAElB,QACE,OAAOpB,KCzBXqD,aAAgBJ,KAGlBA,GAAeK,IAAIvB,IAEJoB,UCPfI,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.2bff2a0c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Container\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { setSearchInput } from \"../redux/actions\";\nimport {\n  withStyles,\n  createMuiTheme,\n  ThemeProvider\n } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport styled from \"styled-components\";\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.searchInputRef = React.createRef();\n  }\n\n  handleSearchInput = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      this.submitSearchInput();\n    }\n  }\n\n  submitSearchInput = () => {\n    const searchInput = this.searchInputRef.current.value;\n    console.log(searchInput);\n    this.props.setSearchInput(searchInput);\n    this.forceUpdate();\n  }\n\n  render() {\n    const {\n      recentSearches,\n      searchOptions\n    } = this.props;\n\n    return(\n      <NewContainer id=\"navbar\">\n        <NewNavbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Art-Supply-Bot</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Favorites</Nav.Link>\n              <NavDropdown title=\"Recent Searches\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">{recentSearches[0]}</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">{recentSearches[1]}</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">{recentSearches[2]}</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <ThemeProvider theme={theme}>\n              <StyledAutocomplete\n                id=\"search-options\"\n                options={searchOptions}\n                getOptionLabel={(searchOption) => searchOption.name}\n                renderInput={(params) =>\n                <TextField\n                  {...params} label=\"Search\"\n                  color=\"primary\"\n                  onKeyDown={this.handleSearchInput}\n                  inputRef={this.searchInputRef}/>}\n              />\n            </ThemeProvider>\n            <NewButton variant=\"outline-success\" onClick={this.submitSearchInput}>Search</NewButton>\n          </Navbar.Collapse>\n        </NewNavbar>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  max-width: 100%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst NewNavbar = styled(Navbar)`\n  width: calc(15px + 100%);\n  border-bottom: 2px solid #eee;\n`;\n\nconst NewButton = styled(Button)`\n  color: #7e57c2;\n  height: 50px;\n  margin-left: 5px;\n  margin-right: 15px;\n  border: 1px solid #7e57c2;\n  &:hover, &:active, &:focus {\n    background-color: #7e57c2 !important;\n    border: 1px solid #7e57c2 !important;\n    box-shadow: none !important;\n  }\n`;\n\nconst StyledAutocomplete = withStyles({\n  root: {\n    height: 50,\n    width: 300\n  }\n})(Autocomplete);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#7e57c2\",\n    }\n  }\n});\n\nconst mapDispatchToProps =  {\n  setSearchInput: setSearchInput\n};\n\nconst mapStateToProps = (state) => ({\n  recentSearches: state.recentSearches,\n  searchOptions: state.searchOptions\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","export const setSearchInput = (searchInput) => {\n  return {\n    type: \"SET_SEARCH_INPUT\",\n    searchInput\n  }\n}\n\nexport const setEmail = (email) => {\n  return {\n    type: \"SET_EMAIL\",\n    email\n  }\n}","import React, { Component } from \"react\";\nimport {\n  Table,\n  Container\n } from \"react-bootstrap\";\nimport { MdDone } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nclass ProductTable extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return(\n      <NewContainer id=\"table\">\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Favorite</th>\n              <th>Product Name</th>\n              <th>Store</th>\n              <th>Stock</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><MdDone /></td>\n              <td>{ this.props.searchInput }</td>\n              <td>Todo</td>\n              <td>Todo</td>\n              <td>Todo</td>\n            </tr>\n            <tr>\n              <td><MdDone /></td>\n              <td>{ this.props.searchInput }</td>\n              <td>Todo</td>\n              <td>Todo</td>\n              <td>Todo</td>\n            </tr>\n            <tr>\n              <td><MdDone /></td>\n              <td>{ this.props.searchInput }</td>\n              <td>Todo</td>\n              <td>Todo</td>\n              <td>Todo</td>\n            </tr>\n          </tbody>\n        </Table>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst mapStateToProps = (state) => ({\n  searchInput: state.searchInput\n});\n\nexport default connect(mapStateToProps)(ProductTable);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport {\n  XYPlot,\n  VerticalBarSeries\n} from \"react-vis\";\nimport { connect } from \"react-redux\";\n\nclass Graph extends Component {\n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n    return (\n      <NewContainer id=\"graph\">\n        <XYPlot height={200} width={200} colorType=\"category\" colorDomain={[0]} colorRange={[\"#7e57c2\"]}>\n          <VerticalBarSeries data={this.props.graphData}></VerticalBarSeries>\n        </XYPlot>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst mapStateToProps = (state) => ({\n  graphData: state.graphData\n})\n\nexport default connect(mapStateToProps)(Graph);","import React, { Component } from \"react\";\nimport {\n  Form,\n  FormControl,\n  Button,\n  Container\n} from \"react-bootstrap\";\nimport { MdDone } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { setEmail } from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  submitEmail = (ev) => {\n    if (ev.key === \"Enter\") {\n      ev.preventDefault();\n      this.handleEmail();\n    }\n  }\n\n  handleEmail = () => {\n    const email = this.refs.email.value;\n    this.props.setEmail(email);\n  }\n\n  render() {\n    let success;\n    if (this.props.emailSuccess) {\n      success = <MdDone />\n    }\n\n    return (\n      <NewContainer id=\"contact\">\n        <Form onKeyDown={this.submitEmail} inline>\n          <NewFormControl type=\"email\" placeholder=\"Enter email\" ref=\"email\" />\n          {success}\n        </Form>\n        <NewButton variant=\"outline-success\" onClick={this.handleEmail}>\n            Submit\n        </NewButton>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst NewFormControl = styled(FormControl)`\n  &:active, &:focus {\n    border: 1px solid #7e57c2 !important;\n  }\n`;\n\nconst NewButton = styled(Button)`\n  color: #7e57c2;\n  border: 1px solid #7e57c2;\n  margin-top: 5px;\n  &:hover, &:active, &:focus {\n    background-color: #7e57c2 !important;\n    border: 1px solid #7e57c2 !important;\n    box-shadow: none !important;\n  }\n`;\n\nconst mapDispatchToProps = {\n  setEmail: setEmail\n};\n\nconst mapStateToProps = (state) => ({\n  emailSuccess: state.emailSuccess\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Navigation from \"./components/navbar\";\nimport ProductTable from \"./components/productTable\";\nimport Graph from \"./components/graph\";\nimport Contact from \"./components/contact\";\nimport styled from \"styled-components\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Navigation></Navigation>\n        <NewContainer>\n          <Graph></Graph>\n          <ProductTable></ProductTable>\n        </NewContainer>\n        <NewContainer>\n          <Contact></Contact>\n        </NewContainer>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 100%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n`;\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  max-width: 100%;\n  padding: 15px;\n  display: flex;\n  flex-direction: row;\n`;","import { put, select, all, takeLatest } from \"redux-saga/effects\";\n\nexport const getGraphData = state => state.graphData;\nexport const getSearchInput = state => state.searchInput;\nexport const getRecentSearches = state => state.recentSearches;\n\nfunction* setSearchInput(action) {\n  let newRecentSearches = yield select(getRecentSearches);\n  let currIndex = newRecentSearches.length;\n\n  for (let i = currIndex; i > 0; i--) {\n    newRecentSearches[i] = newRecentSearches[i - 1];\n  }\n  newRecentSearches[0] = action.searchInput;\n  newRecentSearches = newRecentSearches.slice(0, 3);\n\n  yield put({\n    type: \"SEARCH_INPUT_UPDATED\",\n    searchInput: action.searchInput,\n    recentSearches: newRecentSearches\n    // setSearchInputBackend: action.setSearchInputBackend\n  });\n}\n\nfunction* setEmail(action) {\n  yield put({\n    type: \"EMAIL_UPDATED\",\n    // setEmailBackend: action.setEmailBackend\n  });\n}\n\nfunction* appWatcher() {\n  yield takeLatest(\"SET_SEARCH_INPUT\", setSearchInput);\n  yield takeLatest(\"SET_EMAIL\", setEmail);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    appWatcher()\n  ]);\n}","let defaultGraphData = [{x: 1, y: 2}, {x: 2, y: 3}, {x: 3, y: 4}, {x: 4, y: 5}];\nlet defaultTableData = [];\n\nconst initialState = {\n  graphData: defaultGraphData,\n  tableData: defaultTableData,\n  searchInput: \"copic marker\",\n  selectedProduct: \"\",\n  searchOptions: [\n    {name: \"copic marker 36 set\"},\n    {name: \"copic marker 72 set\"},\n    {name: \"copic marker 128 set\"},\n    {name: \"prismacolour marker 36 set\"},\n    {name: \"promarker 12 set\"},\n    {name: \"promarker 36 set\"}\n  ],\n  favourites: [],\n  recentSearches: [],\n  emailSuccess: false\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case \"SEARCH_INPUT_UPDATED\":\n      return {\n        ...state,\n        searchInput: action.searchInput,\n      }\n    case \"EMAIL_UPDATED\":\n      return {\n        ...state,\n        emailSuccess: true\n      }\n    default:\n      return state;\n  }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware  from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport reducer from \"./reducers.js\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}