{"version":3,"sources":["components/navbar.js","redux/actions.js","components/productTable.js","components/graph.js","components/contact.js","App.js","redux/sagas.js","redux/reducers.js","redux/store.js","index.js"],"names":["Navigation","props","submitSearchInput","ev","key","preventDefault","handleSearchInput","searchInput","refs","value","setSearchInput","forceUpdate","recentSearches","this","NewContainer","id","NewNavbar","bg","expand","Navbar","Brand","href","Toggle","aria-controls","Collapse","NewNav","className","Nav","Link","NavDropdown","title","Item","Form","onKeyDown","inline","NewFormControl","type","placeholder","ref","NewButton","variant","onClick","Component","styled","Container","FormControl","Button","mapDispatchToProps","connect","state","ProductTable","NewTable","striped","bordered","hover","Table","Graph","height","width","colorType","colorDomain","colorRange","data","graphData","Contact","submitEmail","handleEmail","email","setEmail","success","emailSuccess","App","Wrapper","div","appWatcher","rootSaga","getRecentSearches","action","select","newRecentSearches","currIndex","length","i","slice","put","takeLatest","all","initialState","x","y","tableData","selectedProduct","favourites","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83c3b06f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Navbar,\n  Nav,\n  Form,\n  FormControl,\n  NavDropdown,\n  Container\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { setSearchInput } from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  submitSearchInput = (ev) => {\n    if (ev.key === \"Enter\") {\n      ev.preventDefault();\n      this.handleSearchInput();\n    }\n  }\n\n  handleSearchInput = () => {\n    const searchInput = this.refs.searchInput.value;\n    this.props.setSearchInput(searchInput);\n    this.forceUpdate();\n  }\n\n  render() {\n    const {\n      recentSearches\n    } = this.props;\n\n    return(\n      <NewContainer id=\"navbar\">\n        <NewNavbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Art-Supply-Bot</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <NewNav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Favorites</Nav.Link>\n              <NavDropdown title=\"Recent Searches\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">{recentSearches[0]}</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">{recentSearches[1]}</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">{recentSearches[2]}</NavDropdown.Item>\n              </NavDropdown>\n            </NewNav>\n            <Form onKeyDown={this.submitSearchInput} inline>\n              <NewFormControl type=\"text\" placeholder=\"Copic marker\" ref=\"searchInput\" />\n              <NewButton variant=\"outline-success\" onClick={this.handleSearchInput}>Search</NewButton>\n            </Form>\n          </Navbar.Collapse>\n        </NewNavbar>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  max-width: 100%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst NewNavbar = styled(Navbar)`\n  width: calc(15px + 100%);\n  border-bottom: 2px solid #eee;\n`;\n\nconst NewNav = styled(Nav)`\n  margin-left: 50%;\n`;\n\nconst NewFormControl = styled(FormControl)`\n  &:active, &:focus {\n    border: 1px solid blueviolet !important;\n  }\n`;\n\nconst NewButton = styled(Button)`\n  color: blueviolet;\n  margin-left: 5px;\n  margin-right: 15px;\n  border: 1px solid blueviolet;\n  &:hover, &:active, &:focus {\n    background-color: blueviolet !important;\n    border: 1px solid blueviolet !important;\n    box-shadow: none !important;\n  }\n`;\n\nconst mapDispatchToProps =  {\n  setSearchInput: setSearchInput\n};\n\nconst mapStateToProps = (state) => ({\n  recentSearches: state.recentSearches\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","export const setSearchInput = (searchInput) => {\n  return {\n    type: \"SET_SEARCH_INPUT\",\n    searchInput\n  }\n}\n\nexport const setEmail = (email) => {\n  return {\n    type: \"SET_EMAIL\",\n    email\n  }\n}","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { MdDone } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nclass ProductTable extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return(\n      <NewTable striped bordered hover>\n        <thead>\n          <tr>\n            <th>Favorite</th>\n            <th>Product Name</th>\n            <th>Store</th>\n            <th>Stock</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td><MdDone /></td>\n            <td>{this.props.searchInput}</td>\n            <td>Todo</td>\n            <td>Todo</td>\n            <td>Todo</td>\n          </tr>\n          <tr>\n            <td><MdDone /></td>\n            <td>{this.props.searchInput}</td>\n            <td>Todo</td>\n            <td>Todo</td>\n            <td>Todo</td>\n          </tr>\n          <tr>\n            <td><MdDone /></td>\n            <td>{this.props.searchInput}</td>\n            <td>Todo</td>\n            <td>Todo</td>\n            <td>Todo</td>\n          </tr>\n        </tbody>\n      </NewTable>\n    );\n  }\n}\n\nconst NewTable = styled(Table)`\n  width: 50%;\n  max-width: 50%;\n`;\n\nconst mapStateToProps = (state) => ({\n  searchInput: state.searchInput\n});\n\nexport default connect(mapStateToProps)(ProductTable);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport {\n  XYPlot,\n  VerticalBarSeries\n} from \"react-vis\";\nimport { connect } from \"react-redux\";\n\nclass Graph extends Component {\n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n    return (\n      <NewContainer>\n        <XYPlot height={200} width={200} colorType=\"category\" colorDomain={[0]} colorRange={[\"blueviolet\"]}>\n          <VerticalBarSeries data={this.props.graphData}></VerticalBarSeries>\n        </XYPlot>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n`;\n\nconst mapStateToProps = (state) => ({\n  graphData: state.graphData\n})\n\nexport default connect(mapStateToProps)(Graph);","import React, { Component } from \"react\";\nimport {\n  Form,\n  FormControl,\n  Button,\n  Container\n} from \"react-bootstrap\";\nimport { MdDone } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { setEmail } from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  submitEmail = (ev) => {\n    if (ev.key === \"Enter\") {\n      ev.preventDefault();\n      this.handleEmail();\n    }\n  }\n\n  handleEmail = () => {\n    const email = this.refs.email.value;\n    this.props.setEmail(email);\n  }\n\n  render() {\n    let success;\n    if (this.props.emailSuccess) {\n      success = <MdDone />\n    }\n\n    return (\n      <NewContainer id=\"contact\">\n        <Form onKeyDown={this.submitEmail} inline>\n          <NewFormControl type=\"email\" placeholder=\"Enter email\" ref=\"email\" />\n          {success}\n        </Form>\n        <NewButton variant=\"outline-success\" onClick={this.handleEmail}>\n            Submit\n        </NewButton>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst NewFormControl = styled(FormControl)`\n  &:active, &:focus {\n    border: 1px solid blueviolet !important;\n  }\n`;\n\nconst NewButton = styled(Button)`\n  color: blueviolet;\n  border: 1px solid blueviolet;\n  margin-top: 5px;\n  &:hover, &:active, &:focus {\n    background-color: blueviolet !important;\n    border: 1px solid blueviolet !important;\n    box-shadow: none !important;\n  }\n`;\n\nconst mapDispatchToProps = {\n  setEmail: setEmail\n};\n\nconst mapStateToProps = (state) => ({\n  emailSuccess: state.emailSuccess\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Navigation from \"./components/navbar\";\nimport ProductTable from \"./components/productTable\";\nimport Graph from \"./components/graph\";\nimport Contact from \"./components/contact\";\nimport styled from \"styled-components\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Navigation></Navigation>\n        <NewContainer>\n          <Graph></Graph>\n          <ProductTable></ProductTable>\n        </NewContainer>\n        <NewContainer>\n          <Contact></Contact>\n        </NewContainer>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 100%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n`;\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  max-width: 100%;\n  padding: 15px;\n  display: flex;\n  flex-direction: row;\n`;","import { put, select, all, takeLatest } from \"redux-saga/effects\";\n\nexport const getGraphData = state => state.graphData;\nexport const getSearchInput = state => state.searchInput;\nexport const getRecentSearches = state => state.recentSearches;\n\nfunction* setSearchInput(action) {\n  let newRecentSearches = yield select(getRecentSearches);\n  let currIndex = newRecentSearches.length;\n\n  for (let i = currIndex; i > 0; i--) {\n    newRecentSearches[i] = newRecentSearches[i - 1];\n  }\n  newRecentSearches[0] = action.searchInput;\n  newRecentSearches = newRecentSearches.slice(0, 3);\n\n  yield put({\n    type: \"SEARCH_INPUT_UPDATED\",\n    searchInput: action.searchInput,\n    recentSearches: newRecentSearches\n    // setSearchInputBackend: action.setSearchInputBackend\n  });\n}\n\nfunction* setEmail(action) {\n  yield put({\n    type: \"EMAIL_UPDATED\",\n    // setEmailBackend: action.setEmailBackend\n  });\n}\n\nfunction* appWatcher() {\n  yield takeLatest(\"SET_SEARCH_INPUT\", setSearchInput);\n  yield takeLatest(\"SET_EMAIL\", setEmail);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    appWatcher()\n  ]);\n}","let defaultGraphData = [{x: 1, y: 2}, {x: 2, y: 3}, {x: 3, y: 4}, {x: 4, y: 5}];\nlet defaultTableData = [];\n\nconst initialState = {\n  graphData: defaultGraphData,\n  tableData: defaultTableData,\n  searchInput: \"Copic marker\",\n  selectedProduct: \"\",\n  favourites: [],\n  recentSearches: [],\n  emailSuccess: false\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case \"SEARCH_INPUT_UPDATED\":\n      return {\n        ...state,\n        searchInput: action.searchInput,\n      }\n    case \"EMAIL_UPDATED\":\n      return {\n        ...state,\n        emailSuccess: true\n      }\n    default:\n      return state;\n  }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware  from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport reducer from \"./reducers.js\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}