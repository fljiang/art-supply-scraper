{"version":3,"sources":["components/navbar.js","redux/actions.js","components/productTable.js","components/graph.js","components/contact.js","App.js","api.js","redux/sagas.js","redux/reducers.js","redux/store.js","index.js"],"names":["Navigation","props","handleSearchInput","e","key","preventDefault","submitSearchInput","searchInput","searchInputRef","current","value","setSearchInput","forceUpdate","React","createRef","this","recentSearches","searchOptions","NewContainer","id","NewNavbar","bg","expand","Navbar","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","NewNavDropdownItem","ThemeProvider","theme","StyledAutocomplete","options","getOptionLabel","searchOption","name","renderInput","params","NewTextField","onKeyDown","inputRef","renderOption","NewButton","variant","onClick","Component","styled","Container","Item","TextField","Button","withStyles","root","marginRight","padding","height","width","inputRoot","color","option","backgroundColor","Autocomplete","createMuiTheme","palette","primary","main","mapDispatchToProps","type","connect","state","columns","dataField","text","ProductTable","rowEvents","row","setProductId","productId","keyField","data","tableData","Graph","colorType","colorDomain","colorRange","NewVerticalGridLines","tickTotal","NewHorizontalGridLines","NewXAxis","tickLabelAngle","NewYAxis","graphData","VerticalGridLines","HorizontalGridLines","XAxis","YAxis","Contact","handleEmailInput","ev","handleEmail","submitEmailInput","emailInput","emailInputRef","setEmailInput","success","emailInputSuccess","Form","inline","NewFormControl","placeholder","ref","FormControl","App","Wrapper","div","getTableDataBackend","a","fetch","response","json","getGraphDataBackend","appWatcher","rootSaga","getRecentSearches","defaultGraphData","x","y","searchOptionsDict","action","select","newRecentSearches","i","length","slice","apiSearchInput","call","record","push","put","takeLatest","all","initialState","activeProductId","favourites","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4YAoBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,kBAAoB,SAACC,GACL,UAAVA,EAAEC,MACJD,EAAEE,iBACF,EAAKC,sBARU,EAYnBA,kBAAoB,WAClB,IAAMC,EAAc,EAAKC,eAAeC,QAAQC,MAChD,EAAKT,MAAMU,eAAeJ,GAC1B,EAAKK,eAbL,EAAKJ,eAAiBK,IAAMC,YAFX,E,0CAkBnB,WAAU,IAAD,OACP,EAGIC,KAAKd,MAFPe,EADF,EACEA,eACAC,EAFF,EAEEA,cAGF,OACE,cAACC,EAAD,CAAcC,GAAG,SAAjB,SACE,eAACC,EAAD,CAAWC,GAAG,QAAQC,OAAO,KAA7B,UACE,cAACC,EAAA,EAAOC,MAAR,CAAcC,KAAK,QAAnB,gCACA,cAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,eAACJ,EAAA,EAAOK,SAAR,CAAiBT,GAAG,mBAApB,UACE,eAACU,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIE,KAAL,CAAUN,KAAK,QAAf,uBACA,eAACO,EAAA,EAAD,CAAaC,MAAM,kBAAkBd,GAAG,qBAAxC,UACE,cAACe,EAAD,CAAoBT,KAAK,cAAzB,SAAwCT,EAAe,KACvD,cAACkB,EAAD,CAAoBT,KAAK,cAAzB,SAAwCT,EAAe,KACvD,cAACkB,EAAD,CAAoBT,KAAK,cAAzB,SAAwCT,EAAe,WAG3D,cAACmB,EAAA,EAAD,CAAeC,MAAOA,EAAtB,SACE,cAACC,EAAD,CACElB,GAAG,iBACHmB,QAASrB,EACTsB,eAAgB,SAACC,GAAD,OAAkBA,EAAaC,MAC/CC,YAAa,SAACC,GAAD,OACX,cAACC,EAAD,2BACMD,GADN,IAEEE,UAAW,EAAK3C,kBAChB4C,SAAU,EAAKtC,mBACnBuC,aAAc,SAACP,GAAD,OACZ,cAACN,EAAD,UAAqBM,EAAaC,YAIxC,cAACO,EAAD,CAAWC,QAAQ,kBAAkBC,QAASnC,KAAKT,kBAAnD,gC,GAtDa6C,aA8DnBjC,EAAekC,YAAOC,IAAPD,CAAH,uHAQZhC,EAAYgC,YAAO7B,IAAP6B,CAAH,2FAKTlB,EAAqBkB,YAAOpB,IAAYsB,KAAnBF,CAAH,uOAYlBR,EAAeQ,YAAOG,IAAPH,CAAH,uDAIZJ,EAAYI,YAAOI,IAAPJ,CAAH,iRAYTf,EAAqBoB,YAAW,CACpCC,KAAM,CACJC,YAAa,IACbC,QAAS,GACTC,OAAQ,GACRC,MAAO,KAETC,UAAW,CACTC,MAAO,WAETC,OAAQ,CACN,6BAA8B,CAC5BC,gBAAiB,aAZIT,CAexBU,KAEG/B,EAAQgC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKNC,EAAqB,CACzB7D,eCrJ4B,SAACJ,GAC7B,MAAO,CACLkE,KAAM,mBACNlE,iBD0JWmE,eALS,SAACC,GAAD,MAAY,CAClC3D,eAAgB2D,EAAM3D,eACtBC,cAAe0D,EAAM1D,iBAGiBuD,EAAzBE,CAA6C1E,G,kBErJtD4E,GAAU,CAAC,CACfC,UAAW,WACXC,KAAM,YACL,CACDD,UAAW,OACXC,KAAM,QACL,CACDD,UAAW,QACXC,KAAM,SACL,CACDD,UAAW,QACXC,KAAM,SACL,CACDD,UAAW,QACXC,KAAM,UAGFC,G,kDACJ,WAAY9E,GAAQ,uCACZA,G,0CAGR,WAAU,IAAD,OACD+E,EAAY,CAChB9B,QAAS,SAAC/C,EAAG8E,GACX,EAAKhF,MAAMiF,aAAaD,EAAIE,aAIhC,OACE,cAAC,GAAD,CAAchE,GAAG,QAAjB,SACE,cAAC,IAAD,CAAgBiE,SAAS,KAAKC,KAAMtE,KAAKd,MAAMqF,UAAWV,QAASA,GAASI,UAAWA,U,GAdpE7B,aAoBrBjC,GAAekC,YAAOC,IAAPD,CAAH,qHAQZoB,GAAqB,CACzBU,aD/C0B,SAACC,GAC3B,MAAO,CACLV,KAAM,iBACNU,eCmDWT,gBAJS,SAACC,GAAD,MAAY,CAClCW,UAAWX,EAAMW,aAGqBd,GAAzBE,CAA6CK,I,SChDtDQ,G,kDACJ,WAAYtF,GAAQ,uCACVA,G,0CAGV,WACE,OACE,cAAC,GAAD,CAAckB,GAAG,QAAjB,SACE,eAAC,KAAD,CAAQ0C,OAAQ,IAAKC,MAAO,IAAK0B,UAAU,WAAWC,YAAa,CAAC,GAAIC,WAAY,CAAC,WAArF,UACE,cAACC,GAAD,CAAsBC,UAAW,IACjC,cAACC,GAAD,CAAwBD,UAAW,IACnC,cAACE,GAAD,CAAU7D,MAAM,OAAO2D,UAAW,EAAGG,eAAgB,MACrD,cAACC,GAAD,CAAU/D,MAAM,QAAQ2D,UAAW,IACnC,cAAC,KAAD,CAAYP,KAAMtE,KAAKd,MAAMgG,UAAWjC,MAAO,a,GAbrCb,aAoBdjC,GAAekC,YAAOC,IAAPD,CAAH,qHAQZuC,GAAuBvC,YAAO8C,KAAP9C,CAAH,kDAIpByC,GAAyBzC,YAAO+C,KAAP/C,CAAH,kDAItB0C,GAAW1C,YAAOgD,KAAPhD,CAAH,wEAKR4C,GAAW5C,YAAOiD,KAAPjD,CAAH,wEASCsB,gBAJS,SAACC,GAAD,MAAY,CAClCsB,UAAWtB,EAAMsB,aAGJvB,CAAyBa,I,8BCnDlCe,G,kDACJ,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IAIRsG,iBAAmB,SAACC,GACH,UAAXA,EAAGpG,MACLoG,EAAGnG,iBACH,EAAKoG,gBARU,EAYnBC,iBAAmB,WACjB,IAAMC,EAAa,EAAKC,cAAcnG,QAAQC,MAC9C,EAAKT,MAAM4G,cAAcF,IAZzB,EAAKC,cAAgB/F,IAAMC,YAFV,E,0CAiBnB,WACE,IAAIgG,EAKJ,OAJI/F,KAAKd,MAAM8G,oBACbD,EAAU,cAAC,KAAD,KAIV,eAAC,GAAD,CAAc3F,GAAG,UAAjB,UACE,eAAC6F,GAAA,EAAD,CAAMnE,UAAW9B,KAAKwF,iBAAkBU,QAAM,EAA9C,UACE,cAACC,GAAD,CAAgBzC,KAAK,QAAQ0C,YAAY,cAAcC,IAAKrG,KAAK6F,gBAChEE,KAEH,cAAC,GAAD,CAAW7D,QAAQ,kBAAkBC,QAASnC,KAAK2F,iBAAnD,2B,GA9BcvD,aAsChBjC,GAAekC,YAAOC,IAAPD,CAAH,qHAQZ8D,GAAiB9D,YAAOiE,KAAPjE,CAAH,mGAMdJ,GAAYI,YAAOI,IAAPJ,CAAH,8PAWToB,GAAqB,CACzBqC,cH9D2B,SAACF,GAC5B,MAAO,CACLlC,KAAM,kBACNkC,gBITEW,ID2ES5C,aAJS,SAACC,GAAD,MAAY,CAClCoC,kBAAmBpC,EAAMoC,qBAGavC,GAAzBE,CAA6C4B,I,4JC1E1D,WACE,OACE,eAACiB,GAAD,WACE,cAAC,EAAD,IACA,eAAC,GAAD,CAAcpG,GAAG,MAAjB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,c,GAPQgC,cAcZoE,GAAUnE,IAAOoE,IAAV,gKASPtG,GAAekC,YAAOC,IAAPD,CAAH,4HAQHkE,M,yDCvCFG,GAAmB,yCAAG,WAAOlH,GAAP,kBAAAmH,EAAA,sEACVC,MAAM,kDAAoDpH,GADhD,cAC3BqH,EAD2B,gBAEdA,EAASC,OAFK,cAE3BxC,EAF2B,yBAG1BA,GAH0B,2CAAH,sDAMnByC,GAAmB,yCAAG,WAAO3C,GAAP,kBAAAuC,EAAA,sEACVC,MAAM,kDAAoDxC,GADhD,cAC3ByC,EAD2B,gBAEdA,EAASC,OAFK,cAE3BxC,EAF2B,yBAG1BA,GAH0B,2CAAH,sD,aCiBtB1E,I,aA8BAuE,I,aAiBA2B,I,aAQAkB,I,aAMeC,IA3EZC,GAAoB,SAAAtD,GAAK,OAAIA,EAAM3D,gBACnCkH,GAAmB,CAAC,CAACC,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG,EAAGC,EAAG,IAG/EC,GAAoB,CACxB,sCAAuC,2CACvC,wCAAyC,uCACzC,+BAAgC,kDAChC,+CAAgD,8CAChD,0CAA2C,uCAC3C,uCAAwC,iCACxC,4CAA6C,8CAG/C,SAAU1H,GAAe2H,GAAzB,oFAC0B,OAD1B,SACgCC,aAAON,IADvC,OAIE,IAHIO,EADN,OAIWC,EAAID,EAAkBE,OAAQD,EAAI,EAAGA,IAC5CD,EAAkBC,GAAKD,EAAkBC,EAAI,GAO9B,OAJjBD,EAAkB,GAAKF,EAAO/H,YAC9BiI,EAAoBA,EAAkBG,MAAM,EAAG,GAEzCC,EAAiBP,GAAkBC,EAAO/H,aAXlD,SAYyBsI,aAAKpB,GAAqBmB,GAZnD,OAgBE,IAJMhB,EAZR,OAeMtC,EAAY,GACPmD,EAAI,EAAGA,EAAIb,EAASvC,KAAKqD,OAAQD,KACpCK,EAASlB,EAASvC,KAAKoD,IACrB,KAAWH,EAAO/H,YACxB+E,EAAUyD,KAAKD,GAGjB,OAtBF,UAsBQE,aAAI,CACRvE,KAAM,uBACNzD,eAAgBwH,EAChBjI,YAAa+H,EAAO/H,YACpB+E,UAAWA,IA1Bf,yCA8BA,SAAUJ,GAAaoD,GAAvB,0EACmB,OADnB,SACyBO,aAAKf,GAAqBQ,EAAOnD,WAD1D,OAUE,OATMyC,EADR,OAOI3B,EAJG2B,EAASvC,KAAKqD,OAILd,EAASvC,KAHT6C,GAJhB,SAUQc,aAAI,CACRvE,KAAM,qBACNU,UAAWmD,EAAOnD,UAClBc,UAAWA,IAbf,wCAiBA,SAAUY,GAAcyB,GAAxB,kEAGE,OAHF,SAGQU,aAAI,CACRvE,KAAM,wBAJV,wCAQA,SAAUsD,KAAV,kEACE,OADF,SACQkB,aAAW,mBAAoBtI,IADvC,OAEE,OAFF,SAEQsI,aAAW,iBAAkB/D,IAFrC,OAGE,OAHF,SAGQ+D,aAAW,kBAAmBpC,IAHtC,wCAMe,SAAUmB,KAAV,kEACb,OADa,SACPkB,aAAI,CACRnB,OAFW,wCClFf,IAUMoB,GAAe,CAGnBnI,eAAgB,GAChBT,YAAa,eACbU,cAAe,CACb,CAACwB,KAAM,uCACP,CAACA,KAAM,yCACP,CAACA,KAAM,gCACP,CAACA,KAAM,gDACP,CAACA,KAAM,2CACP,CAACA,KAAM,wCACP,CAACA,KAAM,8CAET6C,UAxBuB,CACvB,CACE,UAAa,EACb,KAAQ,eACR,MAAS,WACT,MAAS,UACT,MAAS,KAqBX8D,gBAAiB,GACjBC,WAAY,GACZpD,UAAWiC,GAGXnB,mBAAmB,GC7BfuC,GAAiBC,eAEjBC,GAAQC,cD8BC,WAAmC,IAAlC9E,EAAiC,uDAAzBwE,GAAcb,EAAW,uCAC/C,OAAOA,EAAO7D,MACZ,IAAK,uBACH,OAAO,2BACFE,GADL,IAEE3D,eAAgBsH,EAAOtH,eACvBT,YAAa+H,EAAO/H,YACpB+E,UAAWgD,EAAOhD,YAEtB,IAAK,qBACH,OAAO,2BACFX,GADL,IAEEyE,gBAAiBd,EAAOnD,UACxBc,UAAWqC,EAAOrC,YAEtB,IAAK,sBACH,OAAO,2BACFtB,GADL,IAEEoC,mBAAmB,IAEvB,QACE,OAAOpC,KCjDX+E,aAAgBJ,KAGlBA,GAAeK,IAAI3B,IAEJwB,UCPfI,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.b7999810.chunk.js","sourcesContent":["import {\n  withStyles,\n  createMuiTheme,\n  ThemeProvider\n } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Container\n} from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { setSearchInput } from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.searchInputRef = React.createRef();\n  }\n\n  handleSearchInput = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      this.submitSearchInput();\n    }\n  }\n\n  submitSearchInput = () => {\n    const searchInput = this.searchInputRef.current.value;\n    this.props.setSearchInput(searchInput);\n    this.forceUpdate();\n  }\n\n  render() {\n    const {\n      recentSearches,\n      searchOptions\n    } = this.props;\n\n    return(\n      <NewContainer id=\"navbar\">\n        <NewNavbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">Art-Supply-Scraper</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#home\">Favorites</Nav.Link>\n              <NavDropdown title=\"Recent Searches\" id=\"basic-nav-dropdown\">\n                <NewNavDropdownItem href=\"#action/3.1\">{recentSearches[0]}</NewNavDropdownItem>\n                <NewNavDropdownItem href=\"#action/3.2\">{recentSearches[1]}</NewNavDropdownItem>\n                <NewNavDropdownItem href=\"#action/3.3\">{recentSearches[2]}</NewNavDropdownItem>\n              </NavDropdown>\n            </Nav>\n            <ThemeProvider theme={theme}>\n              <StyledAutocomplete\n                id=\"search-options\"\n                options={searchOptions}\n                getOptionLabel={(searchOption) => searchOption.name}\n                renderInput={(params) =>\n                  <NewTextField\n                    {...params}\n                    onKeyDown={this.handleSearchInput}\n                    inputRef={this.searchInputRef}/>}\n                renderOption={(searchOption) => (\n                  <NewNavDropdownItem>{searchOption.name}</NewNavDropdownItem>\n                )}\n              />\n            </ThemeProvider>\n            <NewButton variant=\"outline-success\" onClick={this.submitSearchInput}>Search</NewButton>\n          </Navbar.Collapse>\n        </NewNavbar>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  max-width: 100%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst NewNavbar = styled(Navbar)`\n  width: calc(15px + 100%);\n  border-bottom: 2px solid #eee;\n`;\n\nconst NewNavDropdownItem = styled(NavDropdown.Item)`\n  color: #7e57c2; !important;\n  &:hover, &:focus {\n    color: white;\n    background-color: #7e57c2 !important;\n  }\n  &.active {\n    color: #7e57c2;\n    background-color: #ebebeb !important;\n  }\n`;\n\nconst NewTextField = styled(TextField)`\n  width: 150% !important;\n`;\n\nconst NewButton = styled(Button)`\n  color: #7e57c2;\n  height: 50%;\n  margin-right: 15px;\n  border: 1px solid #7e57c2;\n  &:hover, &:active, &:focus {\n    background-color: #7e57c2 !important;\n    border: 1px solid #7e57c2 !important;\n    box-shadow: none !important;\n  }\n`;\n\nconst StyledAutocomplete = withStyles({\n  root: {\n    marginRight: 150,\n    padding: 10,\n    height: 50,\n    width: 300\n  },\n  inputRoot: {\n    color: \"#7e57c2\"\n  },\n  option: {\n    \"&:hover, &:active, &:focus\": {\n      backgroundColor: \"#7e57c2\"\n    }\n  }\n})(Autocomplete);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#7e57c2\",\n    }\n  }\n});\n\nconst mapDispatchToProps = {\n  setSearchInput: setSearchInput\n};\n\nconst mapStateToProps = (state) => ({\n  recentSearches: state.recentSearches,\n  searchOptions: state.searchOptions\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","export const setSearchInput = (searchInput) => {\n  return {\n    type: \"SET_SEARCH_INPUT\",\n    searchInput\n  }\n}\n\nexport const setProductId = (productId) => {\n  return {\n    type: \"SET_PRODUCT_ID\",\n    productId\n  }\n}\n\nexport const setEmailInput = (emailInput) => {\n  return {\n    type: \"SET_EMAIL_INPUT\",\n    emailInput\n  }\n}","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// import { MdDone } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { setProductId } from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nconst columns = [{\n  dataField: \"favorite\",\n  text: \"Favorite\"\n}, {\n  dataField: \"name\",\n  text: \"Name\"\n}, {\n  dataField: \"store\",\n  text: \"Store\"\n}, {\n  dataField: \"stock\",\n  text: \"Stock\"\n}, {\n  dataField: \"price\",\n  text: \"Price\"\n}];\n\nclass ProductTable extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const rowEvents = {\n      onClick: (e, row) => {\n        this.props.setProductId(row.productId);\n      }\n    };\n\n    return(\n      <NewContainer id=\"table\">\n        <BootstrapTable keyField=\"id\" data={this.props.tableData} columns={columns} rowEvents={rowEvents}/>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst mapDispatchToProps = {\n  setProductId: setProductId\n};\n\nconst mapStateToProps = (state) => ({\n  tableData: state.tableData\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTable);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  XYPlot,\n  VerticalGridLines,\n  HorizontalGridLines,\n  XAxis,\n  YAxis,\n  LineSeries\n} from \"react-vis\";\nimport styled from \"styled-components\";\n\nclass Graph extends Component {\n  constructor(props) {\n      super(props);\n  }\n\n  render() {\n    return (\n      <NewContainer id=\"graph\">\n        <XYPlot height={500} width={515} colorType=\"category\" colorDomain={[0]} colorRange={[\"#7e57c2\"]}>\n          <NewVerticalGridLines tickTotal={5}/>\n          <NewHorizontalGridLines tickTotal={5}/>\n          <NewXAxis title=\"Date\" tickTotal={5} tickLabelAngle={270}/>\n          <NewYAxis title=\"Price\" tickTotal={5}/>\n          <LineSeries data={this.props.graphData} color={0}></LineSeries>\n        </XYPlot>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst NewVerticalGridLines = styled(VerticalGridLines)`\n  stroke: lightgray;\n`;\n\nconst NewHorizontalGridLines = styled(HorizontalGridLines)`\n  stroke: lightgray;\n`;\n\nconst NewXAxis = styled(XAxis)`\n  stroke: lightgray;\n  stroke-width: 0.5;\n`;\n\nconst NewYAxis = styled(YAxis)`\n  stroke: lightgray;\n  stroke-width: 0.5;\n`;\n\nconst mapStateToProps = (state) => ({\n  graphData: state.graphData\n})\n\nexport default connect(mapStateToProps)(Graph);","import React, { Component } from \"react\";\nimport {\n  Form,\n  FormControl,\n  Button,\n  Container\n} from \"react-bootstrap\";\nimport { MdDone } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { setEmailInput } from \"../redux/actions\";\nimport styled from \"styled-components\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.emailInputRef = React.createRef();\n  }\n\n  handleEmailInput = (ev) => {\n    if (ev.key === \"Enter\") {\n      ev.preventDefault();\n      this.handleEmail();\n    }\n  }\n\n  submitEmailInput = () => {\n    const emailInput = this.emailInputRef.current.value;\n    this.props.setEmailInput(emailInput);\n  }\n\n  render() {\n    let success;\n    if (this.props.emailInputSuccess) {\n      success = <MdDone />\n    }\n\n    return (\n      <NewContainer id=\"contact\">\n        <Form onKeyDown={this.handleEmailInput} inline>\n          <NewFormControl type=\"email\" placeholder=\"Enter email\" ref={this.emailInputRef} />\n          {success}\n        </Form>\n        <NewButton variant=\"outline-success\" onClick={this.submitEmailInput}>\n            Submit\n        </NewButton>\n      </NewContainer>\n    );\n  }\n}\n\nconst NewContainer = styled(Container)`\n  width: 50%;\n  max-width: 50%;\n  margin: 0;\n  padding-left: 0;\n  padding-right: 0;\n`;\n\nconst NewFormControl = styled(FormControl)`\n  &:active, &:focus {\n    border: 1px solid #7e57c2 !important;\n  }\n`;\n\nconst NewButton = styled(Button)`\n  color: #7e57c2;\n  border: 1px solid #7e57c2;\n  margin-top: 5px;\n  &:hover, &:active, &:focus {\n    background-color: #7e57c2 !important;\n    border: 1px solid #7e57c2 !important;\n    box-shadow: none !important;\n  }\n`;\n\nconst mapDispatchToProps = {\n  setEmailInput: setEmailInput\n};\n\nconst mapStateToProps = (state) => ({\n  emailInputSuccess: state.emailInputSuccess\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Navigation from \"./components/navbar\";\nimport ProductTable from \"./components/productTable\";\nimport Graph from \"./components/graph\";\nimport Contact from \"./components/contact\";\nimport styled from \"styled-components\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Navigation></Navigation>\n        <NewContainer id=\"app\">\n          <Graph></Graph>\n          <ProductTable></ProductTable>\n        </NewContainer>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  max-width: 100%;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n`;\n\nconst NewContainer = styled(Container)`\n  width: 100%;\n  max-width: 100%;\n  padding: 15px;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport default App;","export const getTableDataBackend = async (searchInput) => {\n  const response = await fetch(\"https://art-supply-scraper.herokuapp.com/table/\" + searchInput);\n  const data = await response.json();\n  return data;\n};\n\nexport const getGraphDataBackend = async (productId) => {\n  const response = await fetch(\"https://art-supply-scraper.herokuapp.com/graph/\" + productId);\n  const data = await response.json();\n  return data;\n};\n\nexport const postEmailBackend = async (emailInput) => {\n  const response = await fetch(\"https://art-supply-scraper.herokuapp.com/email/\" + emailInput);\n};","import { put, select, all, call, takeLatest } from \"redux-saga/effects\";\nimport {\n  getTableDataBackend,\n  getGraphDataBackend,\n  postEmailBackend\n} from \"../api\";\n\nexport const getGraphData = state => state.graphData;\nexport const getSearchInput = state => state.searchInput;\nexport const getRecentSearches = state => state.recentSearches;\nexport const defaultGraphData = [{x: 1, y: 2}, {x: 2, y: 3}, {x: 3, y: 4}, {x: 4, y: 5}];\n\n// Maps search option display names to api call names\nconst searchOptionsDict = {\n  \"Copic Ciao Markers Basic Set (12PC)\": \"Copic Ciao Markers 12pc Basic Marker Set\",\n  \"Mungyo Compressed Charcoal Set (12PC)\": \"Mungyo Compressed Charcoal Set of 12\",\n  \"Mungyo Oil Pastel Set (24PC)\": \"Mungyo Oil Pastel Set of 24 Standard Assortment\",\n  \"Amsterdam Standard Acrylic Set (36PC x 20ml)\": \"Amsterdam Standard Acrylic Set - 36 x 20 ml\",\n  \"Faber Castell Pastel Pencils Set (12PC)\": \"Fabre Castell 12-Pack Pastel Pencils\",\n  \"Pigma Sensei Manga Drawing Set (6PC)\": \"Pigma Sensei Manga Drawing Set\",\n  \"Winsor & Newton Black Fineliner Set (5PC)\": \"Winsor & Newton Fineliner Set of 5 - Black\"\n}\n\nfunction* setSearchInput(action) {\n  let newRecentSearches = yield select(getRecentSearches);\n\n  // Shift list\n  for (let i = newRecentSearches.length; i > 0; i--) {\n    newRecentSearches[i] = newRecentSearches[i - 1];\n  }\n\n  newRecentSearches[0] = action.searchInput;\n  newRecentSearches = newRecentSearches.slice(0, 3);\n\n  const apiSearchInput = searchOptionsDict[action.searchInput]\n  const response = yield call(getTableDataBackend, apiSearchInput);\n  \n  // Update names to display names in table data\n  let tableData = []\n  for (let i = 0; i < response.data.length; i++) {\n    let record = response.data[i];\n    record[\"name\"] = action.searchInput;\n    tableData.push(record);\n  }\n\n  yield put({\n    type: \"SEARCH_INPUT_UPDATED\",\n    recentSearches: newRecentSearches,\n    searchInput: action.searchInput,\n    tableData: tableData\n  });\n}\n\nfunction* setProductId(action) {\n  const response = yield call(getGraphDataBackend, action.productId);\n  let graphData;\n  if (!response.data.length) {\n    graphData = defaultGraphData;\n  }\n  else {\n    graphData = response.data;\n  }\n\n  yield put({\n    type: \"PRODUCT_ID_UPDATED\",\n    productId: action.productId,\n    graphData: graphData\n  });\n}\n\nfunction* setEmailInput(action) {\n  // yield call(postEmail, action.emailInput);\n\n  yield put({\n    type: \"EMAIL_INPUT_UPDATED\",\n  });\n}\n\nfunction* appWatcher() {\n  yield takeLatest(\"SET_SEARCH_INPUT\", setSearchInput);\n  yield takeLatest(\"SET_PRODUCT_ID\", setProductId);\n  yield takeLatest(\"SET_EMAIL_INPUT\", setEmailInput);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    appWatcher()\n  ]);\n}","import { defaultGraphData } from \"./sagas\";\n\nconst defaultTableData = [\n  {\n    \"productId\": 1,\n    \"name\": \"API may take\",\n    \"store\": \"up to 30\",\n    \"stock\": \"seconds\",\n    \"price\": \"\"\n  }\n]\n\nconst initialState = {\n\n  // Search\n  recentSearches: [],\n  searchInput: \"copic marker\",\n  searchOptions: [\n    {name: \"Copic Ciao Markers Basic Set (12PC)\"},\n    {name: \"Mungyo Compressed Charcoal Set (12PC)\"},\n    {name: \"Mungyo Oil Pastel Set (24PC)\"},\n    {name: \"Amsterdam Standard Acrylic Set (36PC x 20ml)\"},\n    {name: \"Faber Castell Pastel Pencils Set (12PC)\"},\n    {name: \"Pigma Sensei Manga Drawing Set (6PC)\"},\n    {name: \"Winsor & Newton Black Fineliner Set (5PC)\"}\n  ],\n  tableData: defaultTableData,\n\n  // Product\n  activeProductId: \"\",\n  favourites: [],\n  graphData: defaultGraphData,\n\n  // Email\n  emailInputSuccess: false\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case \"SEARCH_INPUT_UPDATED\":\n      return {\n        ...state,\n        recentSearches: action.recentSearches,\n        searchInput: action.searchInput,\n        tableData: action.tableData\n      }\n    case \"PRODUCT_ID_UPDATED\":\n      return {\n        ...state,\n        activeProductId: action.productId,\n        graphData: action.graphData\n      }\n    case \"EMAIL_INPUT_UPDATED\":\n      return {\n        ...state,\n        emailInputSuccess: true\n      }\n    default:\n      return state;\n  }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware  from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport reducer from \"./reducers.js\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}